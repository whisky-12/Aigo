apiVersion: v1
kind: Namespace
metadata:
  name: standard
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nts-backend-foundation-algorithm-engine
  namespace: standard
data:
  env.py: |-
    import os
    
    from application.settings import BASE_DIR
    
    # ================================================= #
    # *************** mysql数据库 配置  *************** #
    # ================================================= #
    # 数据库 ENGINE ，默认演示使用 sqlite3 数据库，正式环境建议使用 mysql 数据库
    # sqlite3 设置
    DATABASE_ENGINE = "django.db.backends.sqlite3"
    DATABASE_NAME = os.path.join(BASE_DIR, "db.sqlite3")
    
    # 使用mysql时，改为此配置
    # DATABASE_ENGINE = "django.db.backends.mysql"
    # DATABASE_NAME = 'django-scaffold' # mysql 时使用
    
    # 数据库地址 改为自己数据库地址
    DATABASE_HOST = "127.0.0.1"
    # # 数据库端口
    DATABASE_PORT = 3306
    # # 数据库用户名
    DATABASE_USER = "root"
    # # 数据库密码
    DATABASE_PASSWORD = "123456"
    
    # 表前缀
    TABLE_PREFIX = "t_"
    # ================================================= #
    # ******** redis配置，无redis 可不进行配置  ******** #
    # ================================================= #
    # REDIS_PASSWORD = ''
    # REDIS_HOST = '127.0.0.1'
    # REDIS_URL = f'redis://:{REDIS_PASSWORD or ""}@{REDIS_HOST}:6380'
    # ================================================= #
    # ****************** 功能 启停  ******************* #
    # ================================================= #
    DEBUG = True
    # 启动登录详细概略获取(通过调用api获取ip详细地址。如果是内网，关闭即可)
    ENABLE_LOGIN_ANALYSIS_LOG = True
    # ================================================= #
    # ****************** 其他 配置  ******************* #
    # ================================================= #
    
    ALLOWED_HOSTS = ["*"]
    
    # daphne启动命令
    # daphne application.asgi:application -b 0.0.0.0 -p 8000

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: nts-backend-foundation-algorithm-engine
  name: nts-backend-foundation-algorithm-engine
  namespace: standard
spec:
  ports:
    - name: default
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: nts-backend-foundation-algorithm-engine
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: nts-backend-foundation-algorithm-engine
    version: v1
  name: nts-backend-foundation-algorithm-engine
  namespace: standard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nts-backend-foundation-algorithm-engine
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nts-backend-foundation-algorithm-engine
        version: v1
    spec:
      containers:
        - name: nts-backend-foundation-algorithm-engine
          image: 192.168.0.25:8888/${CICD_HARBOR_NAMESPACE}/${CICD_PROJECT_NAME}:${CICD_EXECUTE_TIME}-${CICD_GIT_COMMIT}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_OPTS
              value: -Xmx500m
          resources:
            limits:
              cpu: "0.5"
              memory: 2048Mi
            requests:
              cpu: "0.1"
              memory: 512Mi
          livenessProbe:
            failureThreshold: 30
            initialDelaySeconds: 180
            periodSeconds: 2
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 2
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 2
            successThreshold: 2
            tcpSocket:
              port: 8080
            timeoutSeconds: 2
          volumeMounts:
            - name: vol1-conf
              mountPath: /flydiy/engine/conf/env.py
              subPath: env.py

      volumes:
        - name: vol1-conf
          configMap:
            defaultMode: 511
            name: nts-backend-foundation-algorithm-engine
            optional: false
#---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  labels:
#    app: nts-backend-foundation-algorithm-engine
#  name: lb-nts-backend-foundation-algorithm-engine
#  namespace: flyopp
#spec:
#  rules:
#    - host: gateway-opp.sit.flydiysz.cn
#      http:
#        paths:
#          - backend:
#              serviceName: nts-backend-foundation-algorithm-engine
#              servicePort: 8080
#            path: /engine
